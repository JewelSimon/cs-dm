\select@language {english}
\contentsline {chapter}{\numberline {1}1. Requirement, Specifications, and Implementations}{1}{chapter.1}
\contentsline {chapter}{\numberline {2}2. Logical Specifications, Imperative Implementations}{3}{chapter.2}
\contentsline {section}{\numberline {2.1}Imperative Languages for Implementations}{3}{section.2.1}
\contentsline {section}{\numberline {2.2}Declarative Languages for Specifications}{4}{section.2.2}
\contentsline {section}{\numberline {2.3}Refining Declarative Specifications into Imperative Implementations}{5}{section.2.3}
\contentsline {section}{\numberline {2.4}Why Not a Single Language for Programming and Specification?}{6}{section.2.4}
\contentsline {chapter}{\numberline {3}3. Problems with Imperative Code}{7}{chapter.3}
\contentsline {chapter}{\numberline {4}4. Pure Functional Programming as Runnable Mathematics}{9}{chapter.4}
\contentsline {section}{\numberline {4.1}The identify function (for integers)}{9}{section.4.1}
\contentsline {section}{\numberline {4.2}Data and function types}{10}{section.4.2}
\contentsline {section}{\numberline {4.3}Other function values of the same type}{10}{section.4.3}
\contentsline {section}{\numberline {4.4}Dafny is a Program Verifier}{12}{section.4.4}
\contentsline {chapter}{\numberline {5}5. Formal Verification of Imperative Programs}{15}{chapter.5}
\contentsline {section}{\numberline {5.1}Performance vs. Understandability}{15}{section.5.1}
\contentsline {section}{\numberline {5.2}Specification, Implementation, and Verification}{17}{section.5.2}
\contentsline {section}{\numberline {5.3}Declarative Input-Output Specifications}{17}{section.5.3}
\contentsline {subsection}{\numberline {5.3.1}Input-Output Relations}{17}{subsection.5.3.1}
\contentsline {subsection}{\numberline {5.3.2}Relations and Functions}{18}{subsection.5.3.2}
\contentsline {subsection}{\numberline {5.3.3}Total and Partial Functions}{18}{subsection.5.3.3}
\contentsline {subsection}{\numberline {5.3.4}Turning Partial Functions into Total Functions}{18}{subsection.5.3.4}
\contentsline {section}{\numberline {5.4}Imperative Implementation}{19}{section.5.4}
\contentsline {section}{\numberline {5.5}Formal Verification}{19}{section.5.5}
\contentsline {section}{\numberline {5.6}Case Study: The Factorial Function}{19}{section.5.6}
\contentsline {subsection}{\numberline {5.6.1}A Buggy Implementation}{20}{subsection.5.6.1}
\contentsline {subsection}{\numberline {5.6.2}Specifications Establish Correctness Criteria}{20}{subsection.5.6.2}
\contentsline {subsection}{\numberline {5.6.3}A Verified Implementation of the Factorial Function}{21}{subsection.5.6.3}
\contentsline {section}{\numberline {5.7}Case Study: The Fibonacci Function}{23}{section.5.7}
\contentsline {section}{\numberline {5.8}What is Dafny, Again?}{25}{section.5.8}
\contentsline {chapter}{\numberline {6}6. Dafny Language: Types, Statements, Expressions}{27}{chapter.6}
\contentsline {section}{\numberline {6.1}Built-In Types}{27}{section.6.1}
\contentsline {subsection}{\numberline {6.1.1}Booleans}{27}{subsection.6.1.1}
\contentsline {subsection}{\numberline {6.1.2}Numbers}{28}{subsection.6.1.2}
\contentsline {subsection}{\numberline {6.1.3}Characters}{28}{subsection.6.1.3}
\contentsline {subsection}{\numberline {6.1.4}Sets}{28}{subsection.6.1.4}
\contentsline {subsection}{\numberline {6.1.5}Sequences}{29}{subsection.6.1.5}
\contentsline {subsection}{\numberline {6.1.6}Strings}{29}{subsection.6.1.6}
\contentsline {subsection}{\numberline {6.1.7}Maps (Partial Functions)}{29}{subsection.6.1.7}
\contentsline {subsection}{\numberline {6.1.8}Arrays}{30}{subsection.6.1.8}
\contentsline {section}{\numberline {6.2}Statements}{30}{section.6.2}
\contentsline {subsection}{\numberline {6.2.1}Block}{30}{subsection.6.2.1}
\contentsline {subsection}{\numberline {6.2.2}Break}{31}{subsection.6.2.2}
\contentsline {subsection}{\numberline {6.2.3}Update (Assignment)}{31}{subsection.6.2.3}
\contentsline {subsection}{\numberline {6.2.4}Var (variable declaration)}{31}{subsection.6.2.4}
\contentsline {subsection}{\numberline {6.2.5}If (conditional)}{31}{subsection.6.2.5}
\contentsline {subsection}{\numberline {6.2.6}While (iteration)}{32}{subsection.6.2.6}
\contentsline {subsection}{\numberline {6.2.7}Assert (assert a proposition about the state of the program)}{33}{subsection.6.2.7}
\contentsline {subsection}{\numberline {6.2.8}Print (produce output on console)}{33}{subsection.6.2.8}
\contentsline {subsection}{\numberline {6.2.9}Return}{33}{subsection.6.2.9}
\contentsline {section}{\numberline {6.3}Expressions}{34}{section.6.3}
\contentsline {subsection}{\numberline {6.3.1}Literals Expressions}{34}{subsection.6.3.1}
\contentsline {subsection}{\numberline {6.3.2}If (Conditional) Expressions}{34}{subsection.6.3.2}
\contentsline {subsection}{\numberline {6.3.3}Conjunction and Disjunction Expressions}{34}{subsection.6.3.3}
\contentsline {subsection}{\numberline {6.3.4}Sequence, Set, Multiset, and Map Expressions}{35}{subsection.6.3.4}
\contentsline {subsection}{\numberline {6.3.5}Relational Expressions}{35}{subsection.6.3.5}
\contentsline {subsection}{\numberline {6.3.6}Array Allocation Expressions}{35}{subsection.6.3.6}
\contentsline {subsection}{\numberline {6.3.7}Old Expressions}{36}{subsection.6.3.7}
\contentsline {subsection}{\numberline {6.3.8}Cardinality Expressions}{36}{subsection.6.3.8}
\contentsline {subsection}{\numberline {6.3.9}Let Expressions}{36}{subsection.6.3.9}
\contentsline {chapter}{\numberline {7}7. Set Theory}{39}{chapter.7}
\contentsline {section}{\numberline {7.1}Naive Set Theory}{39}{section.7.1}
\contentsline {section}{\numberline {7.2}Overly Naive Set Theory}{39}{section.7.2}
\contentsline {section}{\numberline {7.3}Sets}{40}{section.7.3}
\contentsline {section}{\numberline {7.4}Set Theory Notations}{41}{section.7.4}
\contentsline {subsection}{\numberline {7.4.1}Display notation}{41}{subsection.7.4.1}
\contentsline {subsection}{\numberline {7.4.2}Set comprehension notation}{41}{subsection.7.4.2}
\contentsline {section}{\numberline {7.5}Set Operations}{42}{section.7.5}
\contentsline {subsection}{\numberline {7.5.1}Cardinality}{42}{subsection.7.5.1}
\contentsline {subsection}{\numberline {7.5.2}Equality}{43}{subsection.7.5.2}
\contentsline {subsection}{\numberline {7.5.3}Subset}{43}{subsection.7.5.3}
\contentsline {subsection}{\numberline {7.5.4}Intersection}{43}{subsection.7.5.4}
\contentsline {subsection}{\numberline {7.5.5}Union}{44}{subsection.7.5.5}
\contentsline {subsection}{\numberline {7.5.6}Difference}{44}{subsection.7.5.6}
\contentsline {subsection}{\numberline {7.5.7}Product Set}{44}{subsection.7.5.7}
\contentsline {subsection}{\numberline {7.5.8}Power Set}{44}{subsection.7.5.8}
\contentsline {section}{\numberline {7.6}Tuples}{45}{section.7.6}
\contentsline {section}{\numberline {7.7}Relations}{46}{section.7.7}
\contentsline {section}{\numberline {7.8}Binary Relations}{46}{section.7.8}
\contentsline {subsection}{\numberline {7.8.1}Inverse}{46}{subsection.7.8.1}
\contentsline {section}{\numberline {7.9}Functions: \sphinxstyleemphasis {Single-Valued} Relations}{47}{section.7.9}
\contentsline {section}{\numberline {7.10}Properties of Functions}{48}{section.7.10}
\contentsline {subsection}{\numberline {7.10.1}Total vs Partial}{48}{subsection.7.10.1}
\contentsline {subsection}{\numberline {7.10.2}Injective}{48}{subsection.7.10.2}
\contentsline {subsubsection}{An Aside: Injectivity in Type Theory}{49}{subsubsection*.3}
\contentsline {subsection}{\numberline {7.10.3}Surjective}{49}{subsection.7.10.3}
\contentsline {subsection}{\numberline {7.10.4}Bijective}{50}{subsection.7.10.4}
\contentsline {section}{\numberline {7.11}Properties of Relations}{51}{section.7.11}
\contentsline {subsection}{\numberline {7.11.1}Reflexive}{51}{subsection.7.11.1}
\contentsline {subsection}{\numberline {7.11.2}Symmetric}{51}{subsection.7.11.2}
\contentsline {subsection}{\numberline {7.11.3}Transitive}{51}{subsection.7.11.3}
\contentsline {subsection}{\numberline {7.11.4}Equivalence}{52}{subsection.7.11.4}
\contentsline {section}{\numberline {7.12}Sequences}{52}{section.7.12}
\contentsline {chapter}{\numberline {8}8. Boolean Algebra}{53}{chapter.8}
\contentsline {section}{\numberline {8.1}Boolean Algebra in Dafny}{53}{section.8.1}
\contentsline {section}{\numberline {8.2}Boolean Values}{54}{section.8.2}
\contentsline {section}{\numberline {8.3}Boolean Operators}{54}{section.8.3}
\contentsline {subsection}{\numberline {8.3.1}Nullary, Unary, Binary, and n-Ary Operators}{54}{subsection.8.3.1}
\contentsline {subsection}{\numberline {8.3.2}The Unary Operators of Boolean Algebra}{55}{subsection.8.3.2}
\contentsline {subsubsection}{Constant False}{55}{subsubsection*.4}
\contentsline {subsubsection}{Constant True}{55}{subsubsection*.5}
\contentsline {subsubsection}{Identity Function(s)}{55}{subsubsection*.6}
\contentsline {subsubsection}{Negation}{56}{subsubsection*.7}
\contentsline {subsection}{\numberline {8.3.3}Binary Boolean Operators}{56}{subsection.8.3.3}
\contentsline {subsubsection}{And (conjunction)}{56}{subsubsection*.8}
\contentsline {subsubsection}{Nand (not and)}{57}{subsubsection*.9}
\contentsline {subsubsection}{Or (disjunction)}{57}{subsubsection*.10}
\contentsline {subsubsection}{Xor (exclusive or)}{57}{subsubsection*.11}
\contentsline {subsubsection}{Nor (not or)}{58}{subsubsection*.12}
\contentsline {subsubsection}{Implies}{58}{subsubsection*.13}
\contentsline {subsubsection}{Follows}{58}{subsubsection*.14}
\contentsline {subsection}{\numberline {8.3.4}A Ternary Binary Operator}{58}{subsection.8.3.4}
\contentsline {section}{\numberline {8.4}Formal Languages: Syntax and Semantics}{59}{section.8.4}
\contentsline {section}{\numberline {8.5}The Syntax of Boolean Expressions: Inductive Definitions}{59}{section.8.5}
\contentsline {subsection}{\numberline {8.5.1}The Syntax and Semantics of \sphinxstyleemphasis {Simplified} Boolean Expression Language}{60}{subsection.8.5.1}
\contentsline {subsubsection}{Syntax}{60}{subsubsection*.15}
\contentsline {subsubsection}{Semantics}{60}{subsubsection*.16}
\contentsline {subsection}{\numberline {8.5.2}The Syntax of a Complete Boolean Expression Language}{61}{subsection.8.5.2}
\contentsline {section}{\numberline {8.6}The Semantics of Boolean Expressions: Recursive Evaluation}{62}{section.8.6}
\contentsline {section}{\numberline {8.7}The Syntax and Semantics of Programming Languages}{63}{section.8.7}
\contentsline {chapter}{\numberline {9}9. Propositional Logic}{65}{chapter.9}
\contentsline {section}{\numberline {9.1}Propositional Logic}{65}{section.9.1}
\contentsline {section}{\numberline {9.2}Syntax of Propositional Logic}{66}{section.9.2}
\contentsline {section}{\numberline {9.3}Semantics of Propositional Logic}{66}{section.9.3}
\contentsline {section}{\numberline {9.4}Inference Rules for Propositional Logic}{67}{section.9.4}
\contentsline {section}{\numberline {9.5}Using Logic in Practice}{67}{section.9.5}
\contentsline {section}{\numberline {9.6}Implementing Propositional Logic}{68}{section.9.6}
\contentsline {subsection}{\numberline {9.6.1}Syntax}{69}{subsection.9.6.1}
\contentsline {subsection}{\numberline {9.6.2}Interpretation}{70}{subsection.9.6.2}
\contentsline {subsection}{\numberline {9.6.3}Semantics}{70}{subsection.9.6.3}
\contentsline {subsection}{\numberline {9.6.4}Models}{71}{subsection.9.6.4}
\contentsline {section}{\numberline {9.7}Satisfiability, Validity}{71}{section.9.7}
\contentsline {section}{\numberline {9.8}Logical Consequence}{71}{section.9.8}
\contentsline {chapter}{\numberline {10}10. Natural Deduction}{73}{chapter.10}
\contentsline {chapter}{\numberline {11}11. Sets as Domains: Predicate Logic}{75}{chapter.11}
\contentsline {chapter}{\numberline {12}12. Quantification: First-Order Logic}{77}{chapter.12}
\contentsline {section}{\numberline {12.1}Universal and Existential Quantification}{77}{section.12.1}
\contentsline {section}{\numberline {12.2}Introduction and Elimination Rules for Exists}{77}{section.12.2}
\contentsline {section}{\numberline {12.3}Introduction and Elimination Rules for Forall}{77}{section.12.3}
\contentsline {section}{\numberline {12.4}Induction Principles and Algebraic Data Types}{77}{section.12.4}
\contentsline {chapter}{\numberline {13}Indices and tables}{79}{chapter.13}
